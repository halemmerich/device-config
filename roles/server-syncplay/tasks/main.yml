- name: 'Install dependencies'
  pacman:
    name: "{{ item }}"
  loop:
    - python-twisted
    - python-service-identity
  tags:
    - install

- name: 'Create user syncplay'
  user:
    name: 'syncplay'
    state: present
    shell: /bin/false
    create_home: yes
    home: '/opt/syncplay'
  tags:
    - config

- name: 'Create service'
  template:
    src: syncplay.service.j2
    dest: '/etc/systemd/system/syncplay.service'
    mode: '0644'
  register: systemd
  tags:
    - config

- name: Reload systemd
  systemd:
    daemon_reload: yes
  when: systemd.changed
  tags:
    - config

- name: Create temporary file
  tempfile:
    state: file
  register: download_repo
  tags:
    - install

- name: 'Get index.html'
  get_url:
    url: 'https://github.com/Syncplay/syncplay/releases?q=stable&expanded=true'
    dest: '{{ download_repo.path }}'
    force: yes
  when: download_repo.path is defined
  tags:
    - install

- name: Determine latest available version
  shell: 'grep -Eo "v[0-9]\.[0-9]{1,2}\.[0-9]{1,3}" {{ download_repo.path }} | sed -e "s|v||" | sort -uV | tail -n1'
  register: latest_determined
  when: download_repo.path is defined
  tags:
    - install

- name: Remove temporary file
  file:
    path: "{{ download_repo.path }}"
    state: absent
  when: download_repo.path is defined
  tags:
    - install

- name: Check installed version
  stat:
    path: '/opt/syncplay/server/latest'
  register: latest_stat

- name: Set latest installed version 
  set_fact:
    latest_installed: '{{ latest_stat.stat.lnk_target | basename }}'
  when: latest_stat.stat.exists is defined and latest_stat.stat.exists == true

- name: Upgrade server
  block:
    - name: 'Create destination for version {{ latest_determined.stdout }}'
      file:
        path: '/opt/syncplay/server/{{ latest_determined.stdout }}'
        state: directory
        owner: 'syncplay'
        mode: '0700'
      when: latest_determined.stdout is defined

    - name: 'Deploy syncplay -{{ latest_determined.stdout }}.tar.bz2'
      unarchive:
        src: 'https://github.com/Syncplay/syncplay/archive/v{{ latest_determined.stdout }}.tar.gz'
        dest: '/opt/syncplay/server/{{ latest_determined.stdout }}'
        remote_src: yes
        extra_opts: [--strip-components=1]
      when: latest_determined.stdout is defined

    - name: 'Stop service'
      systemd:
        name: 'syncplay'
        state: stopped

    - name: 'Set symlink'
      file:
        src: '/opt/syncplay/server/{{ latest_determined.stdout }}'
        dest: '/opt/syncplay/server/latest'
        owner: 'syncplay'
        state: link
        force: yes
      when: latest_determined.stdout is defined

  when: (latest_stat.stat.exists is defined and latest_stat.stat.exists == false) or (latest_determined.stdout is defined and latest_installed is defined and latest_determined.stdout is version(latest_installed, ">"))
  tags:
    - install

- community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto}}"
  loop:
    - { port: "8999", proto: "tcp" }
  when: ufw_enabled is defined
  tags:
    - config

- name: 'Start service'
  systemd:
    name: 'syncplay'
    state: started
  tags:
    - config
