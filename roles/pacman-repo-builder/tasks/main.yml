- name: Install requirements
  package:
    name:
    - devtools
    - git
    state: present
  tags:
    - install

- name: Install requirements
  package:
    name:
    - base-devel
    state: present
  when: server_pacmanrepo_chroot_build is not defined
  tags:
    - install

- user:
    name: pacmanrepobuilder
    create_home: yes
    home: /var/lib/pacman-repo-builder
  tags:
    - config

- lineinfile:
    path: /etc/sudoers.d/pacmanrepobuilder
    line: 'pacmanrepobuilder ALL=(ALL) NOPASSWD: {{ item }}'
    create: yes
    validate: 'visudo -cf %s'
  loop:
    - /usr/bin/pacman
  tags:
    - config

- name: Configure dir
  file:
    path: "{{ item }}"
    owner: pacmanrepobuilder
    group: pacmanrepobuilder
    mode: '{{ server_pacmanrepo_access_rights | default("u=rwX,g=rX,o=rX") }}'
    recurse: yes
    state: directory
  loop:
    - '/var/lib/pacman-repo-builder'
  tags:
    - config

- name: Configure dir
  file:
    path: "{{ item }}"
    owner: pacmanrepobuilder
    group: pacmanrepobuilder
    mode: "u=rwX,g=,o="
    recurse: yes
    state: directory
  loop:
    - '/var/lib/pacman-repo-builder/.ssh'
    - '/var/lib/pacman-repo-builder/.gnupg'
  tags:
    - config

- name: 'Create scripts'
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0755'
  loop:
    - { src: "server_pacmanrepo_build.j2", dest: "/usr/local/bin/server_pacmanrepo_build" }
    - { src: "server_pacmanrepo_deploy.j2", dest: "/usr/local/bin/server_pacmanrepo_deploy" }
  tags:
    - config

- name: 'Create custom pacman config'
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0755'
  loop:
    - { src: "pacman.conf.j2", dest: "/usr/local/bin/pacman.conf" }
  when: server_pacmanrepo_buildrepos is defined
  tags:
    - config
    
- name: Set preconfigured keys
  ansible.builtin.lineinfile:
    path: /var/lib/pacman-repo-builder/keys.list
    line: '{{ item }}'
    create: yes
  loop: "{{ server_pacmanrepo_keys }}"
  when: server_pacmanrepo_keys is defined
    
- name: Set preconfigured package deps
  ansible.builtin.lineinfile:
    path: /var/lib/pacman-repo-builder/deps.list
    line: '{{ item }}'
    create: yes
  loop: "{{ server_pacmanrepo_deps }}"
  when: server_pacmanrepo_deps is defined
  
- name: Set preconfigured packages
  ansible.builtin.lineinfile:
    path: /var/lib/pacman-repo-builder/packages.list
    line: '{{ item }}'
    create: yes
  loop: "{{ server_pacmanrepo_packages }}"
  when: server_pacmanrepo_packages is defined

- name: Ensure config is set
  ansible.builtin.lineinfile:
    path: /etc/pacmanrepo.conf
    regex: '^ALLOW_SIGN_FAIL'
    line: 'ALLOW_SIGN_FAIL={{ server_pacmanrepo_allow_sign_fail | default("") }}'
    create: yes

- name: Ensure config is set
  ansible.builtin.lineinfile:
    path: /etc/pacmanrepo.conf
    regex: '^NEVER_FAIL'
    line: 'NEVER_FAIL={{ server_pacmanrepo_never_fail | default("") }}'
    create: yes

- name: Ensure config is set
  ansible.builtin.lineinfile:
    path: /etc/pacmanrepo.conf
    regex: '^MULTICORE_BUILD'
    line: 'MULTICORE_BUILD={{ server_pacmanrepo_multicore_build | default("") }}'
    create: yes

- name: Ensure config is set
  ansible.builtin.lineinfile:
    path: /etc/pacmanrepo.conf
    regex: '^CHROOT_BUILD'
    line: 'CHROOT_BUILD={{ server_pacmanrepo_chroot_build | default("") }}'
    create: yes

- name: Ensure config is set
  ansible.builtin.lineinfile:
    path: /etc/pacmanrepo.conf
    regex: '^TARGET'
    line: 'TARGET={{ server_pacmanrepo_target | default("") }}'
    create: yes

- name: Ensure config is set
  ansible.builtin.lineinfile:
    path: /etc/pacmanrepo.conf
    regex: '^REPO_NAME'
    line: 'REPO_NAME={{ server_pacmanrepo_name | default("") }}'
    create: yes

- name: Set git config name
  command: "git config --global user.name 'fake'"

- name: Set git config mail
  command: "git config --global user.email 'fake@fake.com'"

- name: Build
  command: "server_pacmanrepo_build {{ server_pacmanrepo_name }}"
  when: server_pacmanrepo_build | default(false)
  tags:
  - upgrade
  
- name: Deploy
  command: server_pacmanrepo_deploy
  when: server_pacmanrepo_deploy | default(false)
