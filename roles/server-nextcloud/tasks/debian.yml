- name: 'Install packages'
  package:
    name:
    - php
    - php-fpm
    - php-zip
    - php-bz2
    - php-xml
    - php-mbstring
    - php-gd
    - php-mysql
    - php-curl
    - php-json
    - php-redis
    - pwgen
    - redis-server
  tags:
    - install

- name: Check installed version
  stat:
    path: '{{ nextcloud_path }}'
  register: install_path
    
- name: Install nextcloud
  block:
  - name: Create temporary file
    tempfile:
      state: file
    register: download_repo

  - name: 'Get download page'
    get_url:
      url: 'https://download.nextcloud.com/server/releases/'
      dest: '{{ download_repo.path }}'
      force: yes

  - name: Determine latest available version
    shell: 'grep -Eo "[0-9]{1,2}\.[0-9]{1,3}\.[0-9]{1,3}" {{ download_repo.path }} | sort -uV | tail -n1'
    register: nextcloud_version
    when: nextcloud_version is undefined

  - name: Remove temporary file
    file:
      path: "{{ download_repo.path }}"
      state: absent
  - name: Install
    block:
      - name: Configure directories
        file:
          path: '{{ item.path }}'
          owner: '{{ server_nginx_user }}'
          mode: '{{ item.mode }}'
          state: directory
        loop:
        - { path: '{{ nextcloud_path }}', mode: '0755' }
        - { path: '{{ nextcloud_rw_path }}', mode: '0755' }
        - { path: '{{ nextcloud_apps_path }}', mode: '0755' }
        - { path: '{{ nextcloud_data_path }}', mode: '0770' }
        - { path: '{{ nextcloud_session_path }}', mode: '0700' }

      - name: 'Deploy version {{ nextcloud_version.stdout }}'
        unarchive:
          src: "https://download.nextcloud.com/server/releases/nextcloud-{{ nextcloud_version.stdout }}.tar.bz2"
          dest: '{{ nextcloud_path }}'
          remote_src: yes
          owner: '{{ server_nginx_user }}'
          group: '{{ server_nginx_user }}'
          extra_opts: [--strip-components=1]
        when: nextcloud_version.stdout is defined
        
  when: not install_path.stat.exists
  tags:
    - install

- name: Check config
  stat:
    path: '{{ nextcloud_path }}/updater/config.php'
  register: config_path

- name: 'Protect config'
  file:
    path: '{{ nextcloud_config_path }}'
    mode: '0660'
  when: config_path.stat.exists
  tags:
    - upgrade

- name: Upgrade if needed
  become_user: '{{ server_nginx_user }}'
  shell:
    cmd: "php {{ nextcloud_path }}/updater/updater.phar --no-interaction"
  when: config_path.stat.exists
  tags:
    - upgrade

- name: 'Protect config'
  file:
    path: '{{ nextcloud_config_path }}'
    mode: '0440'
  when: config_path.stat.exists
  tags:
    - upgrade

- name: 'Enable services'
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - redis-server
  tags:
    - config