- include_vars: "vars/{{ ansible_os_family | lower }}.yml"

- name: Install dependencies
  package:
    name:
      - wol
    state: present
  when: ansible_os_family == "Archlinux"
  tags:
    - install

- name: Install dependencies
  package:
    name:
      - wakeonlan
      - iputils-ping
    state: present
  when: ansible_os_family == "Debian"
  tags:
    - install

- name: 'Create mount units'
  template:
    src: "mount.j2"
    dest: "/etc/systemd/system/{{ item.escapedname }}.mount"
    mode: '0644'
  loop: "{{ automount_mounts }}"
  when: automount_mounts is defined
  tags:
    - config

- name: 'Create automount units'
  template:
    src: "automount.j2"
    dest: "/etc/systemd/system/{{ item.escapedname }}.automount"
    mode: '0644'
  loop: "{{ automount_mounts }}"
  when: automount_mounts is defined
  tags:
    - config

- name: 'Create wake units'
  template:
    src: "wake.j2"
    dest: "/etc/systemd/system/wake-{{ item.escapedname }}.service"
    mode: '0644'
  loop: "{{ automount_mounts }}"
  when: automount_mounts is defined and item.mac is defined
  tags:
    - config

- name: 'Create credential files'
  template:
    src: "credentials.j2"
    dest: "/root/.smbcredentials_{{ item.username }}"
    mode: '0600'
  loop: "{{ automount_credentials }}"
  when: automount_credentials is defined
  tags:
    - config

- name: Configure mount directories
  file:
    path: "{{ item.path }}"
    state: directory
  loop: "{{ automount_mounts }}"
  when: automount_mounts is defined
  tags:
    - config  

- name: 'Enable automount units'
  systemd:
    name: "{{ item.escapedname }}.automount"
    daemon-reload: yes
    enabled: yes
  loop: "{{ automount_mounts }}"
  when: automount_mounts is defined
  tags:
    - config
