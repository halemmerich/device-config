- name: 'Create user teamspeak'
  user:
    name: 'teamspeak'
    state: present
    shell: /bin/false
    create_home: yes
    home: '/var/teamspeak'

- name: Configure directories
  file:
    path: '/opt/teamspeak/server'
    owner: 'teamspeak'
    mode: '0700'
    state: directory

- name: 'Create scripts'
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0700'
  loop:
    - { src: "backup/backup.sh.j2", dest: "/usr/local/lib/backupscripts/backup/teamspeak.sh" }
    - { src: "backup/restore.sh.j2", dest: "/usr/local/lib/backupscripts/restore/teamspeak.sh" }

- name: 'Create service teamspeak'
  template:
    src: teamspeak.service.j2
    dest: '/etc/systemd/system/teamspeak.service'
    mode: '0644'
  register: systemd

- name: Reload systemd
  systemd:
    daemon_reload: yes
  when: systemd.changed
  tags:
    - systemd

- name: Create temporary file
  tempfile:
    state: file
  register: download_repo

- name: 'Get index.html'
  get_url:
    url: 'https://files.teamspeak-services.com/releases/server/index.html'
    dest: '{{ download_repo.path }}'
    force: yes
  when: download_repo.path is defined

- name: Determine latest available version
  shell: 'grep -Eo "[0-9]{0,2}\.[0-9]{1,3}\.[0-9]{1,3}" {{ download_repo.path }} | sort -uV | tail -n1'
  register: latest_determined
  when: download_repo.path is defined

- name: Remove temporary file
  file:
    path: "{{ download_repo.path }}"
    state: absent
  when: download_repo.path is defined

- name: Check installed version
  stat:
    path: '/opt/teamspeak/server/latest'
  register: latest_stat

- name: Set latest installed version 
  set_fact:
    latest_installed: '{{ latest_stat.stat.lnk_target | basename }}'
  when: latest_stat.stat.exists is defined and latest_stat.stat.exists == true

- name: Upgrade TeamSpeak 3 server
  block:
    - name: 'Create destination for version {{ latest_determined.stdout }}'
      file:
        path: '/opt/teamspeak/server/{{ latest_determined.stdout }}'
        state: directory
        owner: 'teamspeak'
        mode: '0700'
      when: latest_determined.stdout is defined

    - name: 'Deploy teamspeak3-server_linux_amd64-{{ latest_determined.stdout }}.tar.bz2'
      unarchive:
        src: 'https://files.teamspeak-services.com/releases/server/{{ latest_determined.stdout }}/teamspeak3-server_linux_amd64-{{ latest_determined.stdout }}.tar.bz2'
        dest: '/opt/teamspeak/server/{{ latest_determined.stdout }}'
        remote_src: yes
        extra_opts: [--strip-components=1]
      when: latest_determined.stdout is defined

    - name: 'Stop service'
      systemd:
        name: 'teamspeak'
        state: stopped

    - name: 'Set symlink'
      file:
        src: '/opt/teamspeak/server/{{ latest_determined.stdout }}'
        dest: '/opt/teamspeak/server/latest'
        owner: 'teamspeak'
        state: link
        force: yes
      when: latest_determined.stdout is defined

    - name: 'Lookup DB'
      stat:
        path: '/opt/teamspeak/ts3server.sqlitedb'
      register: db

    - name: Link DB to teamspeak
      file:
        src: '/opt/teamspeak/ts3server.sqlitedb'
        dest: '/opt/teamspeak/server/latest/ts3server.sqlitedb'
        owner: 'teamspeak'
        state: link
        force: yes
      when: db.stat.exists is defined and db.stat.exists == true

  when: (latest_stat.stat.exists is defined and latest_stat.stat.exists == false) or (latest_determined.stdout is defined and latest_installed is defined and latest_determined.stdout is version(latest_installed, ">"))

- name: 'Start service'
  systemd:
    name: 'teamspeak'
    state: started

- community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto}}"
    direction: "{{ item.direction }}"
  loop:
    - { port: "9987", proto: "udp", direction: "in" }
    - { port: "30033", proto: "tcp", direction: "in" }
  when: ufw_enabled is defined

