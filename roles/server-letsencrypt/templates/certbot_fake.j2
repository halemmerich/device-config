#!/bin/bash
CN=""

while [ ! "$1" == "" ]; do
    case "$1" in
    "-d" )
            CN="$2"
            shift
            ;;
    esac
    shift
done

if [ -z "$CN" ]
then
      for C in $(ls /etc/letsencrypt/renewal-hooks/pre/)
      do
            bash "/etc/letsencrypt/renewal-hooks/pre/$C"
      done
      for C in $(ls /etc/letsencrypt/renewal-hooks/deploy/)
      do
            bash "/etc/letsencrypt/renewal-hooks/deploy/$C"
      done
      for C in $(ls /etc/letsencrypt/renewal-hooks/post/)
      do
            bash "/etc/letsencrypt/renewal-hooks/post/$C"
      done
      exit 0
fi

DEST=/etc/letsencrypt/live/$CN/

mkdir -p $DEST

openssl genrsa -out $DEST/privkey.pem 4096
openssl req -new \
            -key $DEST/privkey.pem \
            -subj "/C=FK/ST=FAKE/L=FAKE/O=FAKE/OU=LEAF/CN=$CN" \
            -config <(cat /etc/ssl/openssl.cnf <(printf "[SAN]\nsubjectAltName=DNS:$CN")) \
            -out $DEST/request.csr

openssl x509 -req \
            -days 3650 \
            -in $DEST/request.csr \
            -CA /etc/letsencrypt/{{ ca_name | default("fake") }}/ca.pem\
            -CAkey /etc/letsencrypt/{{ ca_name | default("fake") }}/ca.key\
            -CAcreateserial -CAserial /etc/letsencrypt/{{ ca_name | default("fake") }}/serial.srl \
            -extfile <(cat /etc/ssl/openssl.cnf <(printf "[SAN]\nsubjectAltName=DNS:$CN")) \
            -extensions SAN \
            -out $DEST/cert.pem

rm /etc/letsencrypt/{{ ca_name | default("fake") }}/serial.srl

cat $DEST/cert.pem /etc/letsencrypt/{{ ca_name | default("fake") }}/ca.pem > $DEST/fullchain.pem
